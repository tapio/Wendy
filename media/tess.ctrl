#version 400
// Shader adapted from Triangle Tessellation with OpenGL 4.0
// http://prideout.net/blog/?p=48
// Placed into the public domain by Philip Rideout

layout(vertices = 3) out;
uniform float TessLevel;
in vec3 vPosition[];
in vec3 vNormal[];
out vec3 tcPosition[];
out vec3 tcNormal[];
out float tcCurvature[];

#define ID gl_InvocationID

void main()
{
  tcPosition[ID] = vPosition[ID];
  tcNormal[ID] = vNormal[ID];
  // Calculate curvature factors for each edge
  // Uses the angles between the corner normals of the patch
  tcCurvature[ID] = 1.0 - dot(normalize(tcNormal[ID]), normalize(tcNormal[(ID+1)%3]));

  if (ID == 0) {
    // Set tessellation levels
    gl_TessLevelInner[0] = TessLevel;
    gl_TessLevelOuter[0] = TessLevel;
    gl_TessLevelOuter[1] = TessLevel;
    gl_TessLevelOuter[2] = TessLevel;
  }
}
